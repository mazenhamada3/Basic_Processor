library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Enhanced_Processor is
    Port (
        CLK      : in  std_logic;
        RESET    : in  std_logic;
        DATA_IN  : in  std_logic_vector(31 downto 0);
        DATA_OUT : out std_logic_vector(31 downto 0);
        MEM_ADDR : out std_logic_vector(31 downto 0);
        CACHE_HIT: out std_logic;
        STATUS   : out std_logic_vector(3 downto 0)
    );
end Enhanced_Processor;

architecture Behavioral of Enhanced_Processor is
    signal ALU_OUT : std_logic_vector(31 downto 0);
    signal MEM_OUT : std_logic_vector(31 downto 0);
    signal STATE   : std_logic_vector(2 downto 0);
    signal HAZARD  : std_logic;

begin
    -- Instantiate ALU
    ALU_INSTANCE: entity work.ALU
        port map (
            ALU_OP => "0001",
            AC => DATA_IN,
            DR => MEM_OUT,
            ALU_OUT => ALU_OUT,
            STATUS => STATUS
        );

    -- Instantiate Memory
    MEMORY_INSTANCE: entity work.MEMORY
        port map (
            ADDR => MEM_ADDR,
            DATA_IN => DATA_IN,
            DATA_OUT => MEM_OUT,
            MEM_WRITE => '0'
        );

    -- Instantiate Control Unit
    CONTROL_UNIT_INSTANCE: entity work.CONTROL_UNIT
        port map (
            CLK => CLK,
            RESET => RESET,
            STATE => STATE,
            HAZARD => HAZARD
        );

    -- Connect Outputs
    DATA_OUT <= ALU_OUT;
    CACHE_HIT <= not HAZARD; -- Simplified cache hit logic
end Behavioral;